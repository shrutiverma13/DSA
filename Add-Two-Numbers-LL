#include <bits/stdc++.h>
using namespace std;

 class ListNode {
   public:
     int val;
     ListNode *next;
     ListNode(int v){
       this->val=v;
       this->next=NULL;
     }
 };

ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
   ListNode* tmp1; ListNode* tmp2;
        tmp1=l1; tmp2=l2;
        ListNode* ans = new ListNode(0); 
        ListNode *tmp3=ans;
        int carry=0; 
        while(l1 and l2){
          int sum = l1->val+l2->val+carry;
          carry=sum/10;
          tmp3->val=sum%10;
          l1=l1->next;
          l2=l2->next;
          if(l1 or l2){
            tmp3->next = new ListNode(0);
            tmp3=tmp3->next;
          }
        } 

        while(l1){
          int sum = l1->val+carry;
          carry=sum/10;
          tmp3->val=sum%10;
          l1=l1->next;
          if(l1){
            tmp3->next = new ListNode(0);
            tmp3=tmp3->next;
          }
        }  

        while(l2){
          int sum = l2->val+carry;
          carry = sum/10;
          tmp3->val = sum%10;
          l2=l2->next;
          if(l2){
            tmp3->next = new ListNode(0);
            tmp3=tmp3->next;
          }
        } 

        if(carry != 0){
          tmp3->next = new ListNode(0);
          tmp3->next->val = carry;
        }

        return ans;
  }


int main() {
  ListNode* h1= new ListNode(4); ListNode* h2= new ListNode(8); ListNode* h3 = new ListNode(4);
  h1->next=h2; h2->next=h3;

  ListNode* hh1= new ListNode(3); ListNode* hh2= new ListNode(5); ListNode* hh3 = new ListNode(5);  
  hh1->next=hh2; hh2->next=hh3;

  ListNode* ans = new ListNode(0);
ans = addTwoNumbers(h1,hh1);

  ListNode* tmp = ans;
  while(tmp!=NULL){
  cout<<tmp->val;
  tmp=tmp->next;
 }
}
